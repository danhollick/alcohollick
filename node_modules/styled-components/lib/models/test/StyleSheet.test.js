'use strict';

var _templateObject = _taggedTemplateLiteral(['\n          ', '\n        '], ['\n          ', '\n        ']),
    _templateObject2 = _taggedTemplateLiteral(['\n        html {\n          ', '\n        }\n      '], ['\n        html {\n          ', '\n        }\n      ']);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _expect = require('expect');

var _expect2 = _interopRequireDefault(_expect);

var _enzyme = require('enzyme');

var _utils = require('../../test/utils');

var _StyleSheet = require('../StyleSheet');

var _StyleSheet2 = _interopRequireDefault(_StyleSheet);

var _GlobalStyle2 = require('../GlobalStyle');

var _GlobalStyle3 = _interopRequireDefault(_GlobalStyle2);

var _injectGlobal2 = require('../../constructors/injectGlobal');

var _injectGlobal3 = _interopRequireDefault(_injectGlobal2);

var _css = require('../../constructors/css');

var _css2 = _interopRequireDefault(_css);

var _flatten = require('../../utils/flatten');

var _flatten2 = _interopRequireDefault(_flatten);

var _stringifyRules = require('../../utils/stringifyRules');

var _stringifyRules2 = _interopRequireDefault(_stringifyRules);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var styled = void 0;
var rule1 = 'width: 100%;';
var rule2 = 'text-decoration: none;';
var rule3 = 'color: blue;';

var injectGlobal = (0, _injectGlobal3.default)((0, _GlobalStyle3.default)(_flatten2.default, _stringifyRules2.default), _css2.default);

describe('styleSheet', function () {

  beforeEach(function () {
    styled = (0, _utils.resetStyled)();
  });

  describe('reset()', function () {
    it('should flush all css', function () {
      var Comp = styled.div(_templateObject, rule1);
      (0, _enzyme.shallow)(_react2.default.createElement(Comp, null));
      _StyleSheet2.default.reset();
      (0, _utils.expectCSSMatches)('');
    });
  });

  describe('getCSS()', function () {
    var stripWhitespace = function stripWhitespace(str) {
      return str.trim().replace(/\s+/g, ' ');
    };
    var stripWhitespaceExceptNewline = function stripWhitespaceExceptNewline(str) {
      return str.trim().replace(/[\r\t\f\v ]+/g, ' ');
    };

    function createStyledComponents() {
      var Comp = styled.div(_templateObject, rule1);
      var Comp2 = styled.div(_templateObject, rule2);
      (0, _enzyme.shallow)(_react2.default.createElement(Comp, null));
      (0, _enzyme.shallow)(_react2.default.createElement(Comp2, null));
    }

    it('should list all css in all Components', function () {
      createStyledComponents();
      var css = _StyleSheet2.default.getCSS();
      (0, _expect2.default)(stripWhitespace(css)).toEqual('.sc-a {}.c {width: 100%;}.sc-b {}.d {text-decoration: none;}');
    });

    it('should list all css all Components including globally injected styles', function () {
      createStyledComponents();
      injectGlobal(_templateObject2, rule3);
      var css = _StyleSheet2.default.getCSS();
      (0, _expect2.default)(stripWhitespace(css)).toEqual('.sc-a {}.c {width: 100%;}.sc-b {}.d {text-decoration: none;} html {color: blue;}');
    });

    it('should list all css Components with min: false', function () {
      createStyledComponents();

      var css = _StyleSheet2.default.getCSS({ min: false });
      (0, _expect2.default)(stripWhitespaceExceptNewline(css)).toEqual('.sc-a {}.c {width: 100%;}\n.sc-b {}.d {text-decoration: none;}');
    });

    it('should not throw an error if no styled-components are rendered', function () {
      (0, _expect2.default)(function () {
        return _StyleSheet2.default.getCSS();
      }).toNotThrow();
    });
  });
});